Describe gina#command#grep
  Before all
    let Path = vital#gina#import('System.Filepath')
    let slit1 = Slit(tempname(), 1)
    call slit1.write('A/foo.txt', ['a', 'b', 'c', 'd', 'e'])
    call slit1.write('B/foo.txt', ['A', 'B', 'C', 'D', 'E'])
    call slit1.write('C/foo.txt', ['aa', 'bb', 'cc', 'dd', 'ee'])
    call slit1.execute('add .')
    call slit1.execute('commit --quiet -am "First"')
  End

  Before
    silent! windo bwipeout!
  End

  Describe Use cases
    It might be called without arguments
      Skip It show an interactive prompt so cannot be test
    End

    It might be called with {pattern}
      execute 'edit' fnameescape(slit1.path('A/foo.txt'))
      GinaSync grep a
      Assert Equals(winnr('$'), 2)
      " Focused buffer
      Assert Equals(bufname('%'), printf('gina://%s:grep', slit1.refname))
      Assert Equals(getline(1, '$'), [
            \ 'A/foo.txt[36m:[m1[36m:[m[1;31ma[m',
            \ 'C/foo.txt[36m:[m1[36m:[m[1;31ma[m[1;31ma[m',
            \])
    End

    It might be called with -e{pattern} --or -e{pattern}
      execute 'edit' fnameescape(slit1.path('A/foo.txt'))
      GinaSync grep -ea --or -eb
      Assert Equals(winnr('$'), 2)
      " Focused buffer
      Assert Equals(bufname('%'), printf('gina://%s:grep', slit1.refname))
      Assert Equals(getline(1, '$'), [
            \ 'A/foo.txt[36m:[m1[36m:[m[1;31ma[m',
            \ 'A/foo.txt[36m:[m2[36m:[m[1;31mb[m',
            \ 'C/foo.txt[36m:[m1[36m:[m[1;31ma[m[1;31ma[m',
            \ 'C/foo.txt[36m:[m2[36m:[m[1;31mb[m[1;31mb[m',
            \])
    End
  End
End
